[*]
indent_style = tab

[*.{cs,json,sql}]
charset = utf-8-bom

[*.cs]

# CS1998: Async method lacks 'await' operators and will run synchronously
dotnet_diagnostic.CS1998.severity = suggestion
dotnet_diagnostic.CS1998.severity = suggestion

dotnet_code_quality_unused_parameters = non_public

# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

# Avoid "this." and "Me." if not necessary
dotnet_style_qualification_for_field = false:refactoring
dotnet_style_qualification_for_property = false:refactoring
dotnet_style_qualification_for_method = false:refactoring
dotnet_style_qualification_for_event = false:refactoring

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Suggest more modern language features when available
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion

# Non-private readonly fields are PascalCase
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.symbols = non_private_readonly_fields
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.style = non_private_readonly_field_style

dotnet_naming_symbols.non_private_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_readonly_fields.required_modifiers = readonly

dotnet_naming_style.non_private_readonly_field_style.capitalization = pascal_case

# Constants are PascalCase
dotnet_naming_rule.constants_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = constant_style

dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.constant_style.capitalization = pascal_case

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = suggestion
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local

dotnet_naming_style.camel_case_style.capitalization = camel_case

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style

dotnet_naming_symbols.local_functions.applicable_kinds = local_function

dotnet_naming_style.local_function_style.capitalization = pascal_case

# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.all_members.applicable_kinds = *
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# prefix private members with _

# Define what we will treat as private fields.
dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private
# Define rule that something must begin with an underscore and be in camel case.
dotnet_naming_style.require_underscore_prefix_and_camel_case.required_prefix = _
dotnet_naming_style.require_underscore_prefix_and_camel_case.capitalization = camel_case
# Appy our rule to private fields.
dotnet_naming_rule.private_fields_must_begin_with_underscore_and_be_in_camel_case.symbols = private_fields
dotnet_naming_rule.private_fields_must_begin_with_underscore_and_be_in_camel_case.style = require_underscore_prefix_and_camel_case
dotnet_naming_rule.private_fields_must_begin_with_underscore_and_be_in_camel_case.severity = warning

# Newline settings
csharp_new_line_before_open_brace = none
csharp_new_line_before_catch = false
csharp_new_line_before_else = false
csharp_new_line_before_finally = false
csharp_new_line_before_members_in_anonymous_types = false
csharp_new_line_before_members_in_object_initializers = false

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Whitespace options
csharp_style_allow_embedded_statements_on_same_line_experimental = true

# Prefer "var" everywhere
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:suggestion

# Prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods = true:suggestion
csharp_style_expression_bodied_constructors = true:suggestion
csharp_style_expression_bodied_operators = true:suggestion

# Prefer property-like constructs to have an expression-body
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_accessors = true:suggestion

# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion
csharp_style_prefer_extended_property_pattern = true:suggestion

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = do_not_ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Blocks are allowed
csharp_prefer_braces = true:silent
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

# Disable rules where we differ from StyleCop's opinionated defaults
dotnet_diagnostic.SA1004.severity = None	# Indented doc xml
dotnet_diagnostic.SA1005.severity = None	# Single space after "//"
dotnet_diagnostic.SA1107.severity = None	# Break on same line
dotnet_diagnostic.SA1009.severity = None	# ")" indented (space/tab)
dotnet_diagnostic.SA1025.severity = None	# Multiple spaces
dotnet_diagnostic.SA1027.severity = None	# Tab/space
dotnet_diagnostic.SA1101.severity = None	# Failure to use "this."
dotnet_diagnostic.SA1111.severity = None	# ")" on its own line
dotnet_diagnostic.SA1114.severity = None	# Something that breaks Excel formulas
dotnet_diagnostic.SA1117.severity = None	# Multi-line parameters
dotnet_diagnostic.SA1118.severity = None	# Multi-line parameters
dotnet_diagnostic.SA1120.severity = None	# Blank comment line
dotnet_diagnostic.SA1123.severity = None	# Region within a code element
dotnet_diagnostic.SA1124.severity = None	# No regions
dotnet_diagnostic.SA1127.severity = None	# Constraints on the same line
dotnet_diagnostic.SA1128.severity = None	# Initializers on the same line
dotnet_diagnostic.SA1134.severity = None	# Same-line attributes
dotnet_diagnostic.SA1137.severity = None	# Indentation
dotnet_diagnostic.SA1200.severity = None	# Namespace in Using (not compatible with global usings)
dotnet_diagnostic.SA1201.severity = None	# Constructor after property
dotnet_diagnostic.SA1202.severity = None	# Public before private
dotnet_diagnostic.SA1203.severity = None	# Const first
dotnet_diagnostic.SA1204.severity = None	# Static first
dotnet_diagnostic.SA1210.severity = None	# Alphabetized usings
dotnet_diagnostic.SA1214.severity = None	# Readonly fields first
dotnet_diagnostic.SA1301.severity = None	# "_" prefix
dotnet_diagnostic.SA1309.severity = None	# "_" prefix
dotnet_diagnostic.SA1310.severity = None	# "_" inside
dotnet_diagnostic.SA1313.severity = None	# "_" (errors out for discard params)
dotnet_diagnostic.SA1404.severity = None	# Code suppression no comment
dotnet_diagnostic.SA1407.severity = None	# Explicit math ()
dotnet_diagnostic.SA1500.severity = None	# Opening brace on statement line
dotnet_diagnostic.SA1501.severity = None	# Same line
dotnet_diagnostic.SA1502.severity = None	# Same-line {}
dotnet_diagnostic.SA1503.severity = None	# Same-line brace omissions
dotnet_diagnostic.SA1505.severity = None	# Blank line after "{"
dotnet_diagnostic.SA1508.severity = None	# Blank line before "}"
dotnet_diagnostic.SA1513.severity = None	# No blank line before closing brace
dotnet_diagnostic.SA1512.severity = None	# blank line after comment
dotnet_diagnostic.SA1515.severity = None	# No blank line before comment
dotnet_diagnostic.SA1516.severity = None	# No blank line between members
dotnet_diagnostic.SA1518.severity = None	# Blank lines at end
dotnet_diagnostic.SA1600.severity = None	# Requiring documentation blocks
dotnet_diagnostic.SA1601.severity = None	# Document partials
dotnet_diagnostic.SA1602.severity = None	# Document enums
dotnet_diagnostic.SA1611.severity = None	# Missing param docs
dotnet_diagnostic.SA1615.severity = None	# Missing return docs
dotnet_diagnostic.SA1618.severity = None	# Missing typpe docs
dotnet_diagnostic.SA1623.severity = None	# Doc enforced wording
dotnet_diagnostic.SA1633.severity = None	# Missing file header
dotnet_diagnostic.SA0001.severity = none	# Documentation not enabled
